# Generated by Django 4.2.10 on 2024-06-25 23:15

import django.core.serializers.json
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(default=True)),
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('status', models.CharField(max_length=150)),
                ('raw_data', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStripeLink',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(default=True)),
                ('customer_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stripe_links', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(default=True)),
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=150)),
                ('amount', models.IntegerField()),
                ('raw_data', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='stripe_app.userstripelink')),
                ('payment_intent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='stripe_app.paymentintent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='paymentintent',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='stripe_app.userstripelink'),
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(default=True)),
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=150)),
                ('amount', models.IntegerField()),
                ('raw_data', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='stripe_app.userstripelink')),
                ('payment_intent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='stripe_app.paymentintent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='userstripelink',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('user',), name='user_stripe_link_active_uniq'),
        ),
    ]
